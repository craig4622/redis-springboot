server.port=8088


#自定义的redis配置属性,这里使用了自定义值通过java设置redis连接数据和jedis连接池属性,因为
#通过spring.redis...设置相关redis属性,application.properties少了很多类似testOnBorrow,convertPipelineAndTxResults等属性设置
#所以需要java设置jedis连接池属性,如果只是需要对redis简单的设置,那就只需要在application.properties设置spring.redis..相关属性
#就可以了,不需要通过这里类似RedisConfig通过java进行详细设置
config.redis.host=127.0.0.1
config.redis.port=6379
config.redis.database=2
config.redis.password=
config.redis.timeout=10000
config.redis.usePool=true
config.redis.convertPipelineAndTxResults=true
config.redis.maxIdle=300000
config.redis.maxActive=1000
config.redis.maxWait=500
#如果池中存在空闲可用的连接实例，则需要连接时依据后进先出策略挑选一个连接实例，
# 并激活返回给客户端。如果激活失败或者testOnBorrow被设置成true并且校验失败，
# 则连接实例被废弃，继续检查下一个可用的连接实例，
# 直到找到一个合法可用的连接实例或者连接池再没有可用的连接实例了。
# 从中我们可以看出，像SpringBoot自动装配时默认设置这个参数为false是有道理的，
# testOnBorrow对性能的损耗是比较高的
config.redis.testOnBorrow=true







